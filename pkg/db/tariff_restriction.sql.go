// Code generated by sqlc. DO NOT EDIT.
// source: tariff_restriction.sql

package db

import (
	"context"
	"database/sql"
)

const createTariffRestriction = `-- name: CreateTariffRestriction :one
INSERT INTO tariff_restrictions (
    start_time,
    end_time,
    start_time_2,
    end_time_2
  ) VALUES ($1, $2, $3, $4)
  RETURNING id, start_time, end_time, start_time_2, end_time_2
`

type CreateTariffRestrictionParams struct {
	StartTime  string         `db:"start_time" json:"startTime"`
	EndTime    string         `db:"end_time" json:"endTime"`
	StartTime2 sql.NullString `db:"start_time_2" json:"startTime2"`
	EndTime2   sql.NullString `db:"end_time_2" json:"endTime2"`
}

func (q *Queries) CreateTariffRestriction(ctx context.Context, arg CreateTariffRestrictionParams) (TariffRestriction, error) {
	row := q.db.QueryRowContext(ctx, createTariffRestriction,
		arg.StartTime,
		arg.EndTime,
		arg.StartTime2,
		arg.EndTime2,
	)
	var i TariffRestriction
	err := row.Scan(
		&i.ID,
		&i.StartTime,
		&i.EndTime,
		&i.StartTime2,
		&i.EndTime2,
	)
	return i, err
}

const deleteTariffRestriction = `-- name: DeleteTariffRestriction :exec
DELETE FROM tariff_restrictions
  WHERE id = $1
`

func (q *Queries) DeleteTariffRestriction(ctx context.Context, id int64) error {
	_, err := q.db.ExecContext(ctx, deleteTariffRestriction, id)
	return err
}

const getTariffRestriction = `-- name: GetTariffRestriction :one
SELECT id, start_time, end_time, start_time_2, end_time_2 FROM tariff_restrictions
  WHERE id = $1
`

func (q *Queries) GetTariffRestriction(ctx context.Context, id int64) (TariffRestriction, error) {
	row := q.db.QueryRowContext(ctx, getTariffRestriction, id)
	var i TariffRestriction
	err := row.Scan(
		&i.ID,
		&i.StartTime,
		&i.EndTime,
		&i.StartTime2,
		&i.EndTime2,
	)
	return i, err
}

const updateTariffRestriction = `-- name: UpdateTariffRestriction :one
UPDATE tariff_restrictions SET (
    start_time,
    end_time,
    start_time_2,
    end_time_2
  ) = ($2, $3, $4, $5)
  WHERE id = $1
  RETURNING id, start_time, end_time, start_time_2, end_time_2
`

type UpdateTariffRestrictionParams struct {
	ID         int64          `db:"id" json:"id"`
	StartTime  string         `db:"start_time" json:"startTime"`
	EndTime    string         `db:"end_time" json:"endTime"`
	StartTime2 sql.NullString `db:"start_time_2" json:"startTime2"`
	EndTime2   sql.NullString `db:"end_time_2" json:"endTime2"`
}

func (q *Queries) UpdateTariffRestriction(ctx context.Context, arg UpdateTariffRestrictionParams) (TariffRestriction, error) {
	row := q.db.QueryRowContext(ctx, updateTariffRestriction,
		arg.ID,
		arg.StartTime,
		arg.EndTime,
		arg.StartTime2,
		arg.EndTime2,
	)
	var i TariffRestriction
	err := row.Scan(
		&i.ID,
		&i.StartTime,
		&i.EndTime,
		&i.StartTime2,
		&i.EndTime2,
	)
	return i, err
}
