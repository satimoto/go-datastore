// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: poi_tag.sql

package db

import (
	"context"
)

const listPoiTags = `-- name: ListPoiTags :many
SELECT t.id, t.key, t.value FROM tags t
  INNER JOIN poi_tags pt ON pt.tag_id = t.id
  WHERE pt.poi_id = $1
  ORDER BY t.id
`

func (q *Queries) ListPoiTags(ctx context.Context, poiID int64) ([]Tag, error) {
	rows, err := q.db.QueryContext(ctx, listPoiTags, poiID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Tag
	for rows.Next() {
		var i Tag
		if err := rows.Scan(&i.ID, &i.Key, &i.Value); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const setPoiTag = `-- name: SetPoiTag :exec
INSERT INTO poi_tags (poi_id, tag_id)
  VALUES ($1, $2)
`

type SetPoiTagParams struct {
	PoiID int64 `db:"poi_id" json:"poiID"`
	TagID int64 `db:"tag_id" json:"tagID"`
}

func (q *Queries) SetPoiTag(ctx context.Context, arg SetPoiTagParams) error {
	_, err := q.db.ExecContext(ctx, setPoiTag, arg.PoiID, arg.TagID)
	return err
}

const unsetPoiTags = `-- name: UnsetPoiTags :exec
DELETE FROM poi_tags pt
  WHERE pt.poi_id = $1
`

func (q *Queries) UnsetPoiTags(ctx context.Context, poiID int64) error {
	_, err := q.db.ExecContext(ctx, unsetPoiTags, poiID)
	return err
}
