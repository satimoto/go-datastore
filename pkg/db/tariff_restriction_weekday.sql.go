// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: tariff_restriction_weekday.sql

package db

import (
	"context"
)

const listTariffRestrictionWeekdays = `-- name: ListTariffRestrictionWeekdays :many
SELECT w.id, w.text, w.description FROM weekdays w
  INNER JOIN tariff_restriction_weekdays rw ON rw.weekday_id = w.id
  WHERE rw.tariff_restriction_id = $1
  ORDER BY w.id
`

func (q *Queries) ListTariffRestrictionWeekdays(ctx context.Context, tariffRestrictionID int64) ([]Weekday, error) {
	rows, err := q.db.QueryContext(ctx, listTariffRestrictionWeekdays, tariffRestrictionID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Weekday
	for rows.Next() {
		var i Weekday
		if err := rows.Scan(&i.ID, &i.Text, &i.Description); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const setTariffRestrictionWeekday = `-- name: SetTariffRestrictionWeekday :exec
INSERT INTO tariff_restriction_weekdays 
    (tariff_restriction_id, weekday_id)
  VALUES ($1, $2)
`

type SetTariffRestrictionWeekdayParams struct {
	TariffRestrictionID int64 `db:"tariff_restriction_id" json:"tariffRestrictionID"`
	WeekdayID           int64 `db:"weekday_id" json:"weekdayID"`
}

func (q *Queries) SetTariffRestrictionWeekday(ctx context.Context, arg SetTariffRestrictionWeekdayParams) error {
	_, err := q.db.ExecContext(ctx, setTariffRestrictionWeekday, arg.TariffRestrictionID, arg.WeekdayID)
	return err
}

const unsetTariffRestrictionWeekdays = `-- name: UnsetTariffRestrictionWeekdays :exec
DELETE FROM tariff_restriction_weekdays rw
  WHERE rw.tariff_restriction_id = $1
`

func (q *Queries) UnsetTariffRestrictionWeekdays(ctx context.Context, tariffRestrictionID int64) error {
	_, err := q.db.ExecContext(ctx, unsetTariffRestrictionWeekdays, tariffRestrictionID)
	return err
}
