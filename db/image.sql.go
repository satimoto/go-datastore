// Code generated by sqlc. DO NOT EDIT.
// source: image.sql

package db

import (
	"context"
	"database/sql"
)

const createImage = `-- name: CreateImage :one
INSERT INTO images (
    url, 
    thumbnail, 
    category, 
    type, 
    width, 
    height
  ) VALUES ($1, $2, $3, $4, $5, $6)
  RETURNING id, url, thumbnail, category, type, width, height
`

type CreateImageParams struct {
	Url       string         `db:"url" json:"url"`
	Thumbnail sql.NullString `db:"thumbnail" json:"thumbnail"`
	Category  ImageCategory  `db:"category" json:"category"`
	Type      string         `db:"type" json:"type"`
	Width     sql.NullInt32  `db:"width" json:"width"`
	Height    sql.NullInt32  `db:"height" json:"height"`
}

func (q *Queries) CreateImage(ctx context.Context, arg CreateImageParams) (Image, error) {
	row := q.db.QueryRowContext(ctx, createImage,
		arg.Url,
		arg.Thumbnail,
		arg.Category,
		arg.Type,
		arg.Width,
		arg.Height,
	)
	var i Image
	err := row.Scan(
		&i.ID,
		&i.Url,
		&i.Thumbnail,
		&i.Category,
		&i.Type,
		&i.Width,
		&i.Height,
	)
	return i, err
}

const deleteImage = `-- name: DeleteImage :exec
DELETE FROM images
  WHERE id = $1
`

func (q *Queries) DeleteImage(ctx context.Context, id int64) error {
	_, err := q.db.ExecContext(ctx, deleteImage, id)
	return err
}

const getImage = `-- name: GetImage :one
SELECT id, url, thumbnail, category, type, width, height FROM images
  WHERE id = $1
`

func (q *Queries) GetImage(ctx context.Context, id int64) (Image, error) {
	row := q.db.QueryRowContext(ctx, getImage, id)
	var i Image
	err := row.Scan(
		&i.ID,
		&i.Url,
		&i.Thumbnail,
		&i.Category,
		&i.Type,
		&i.Width,
		&i.Height,
	)
	return i, err
}

const updateImage = `-- name: UpdateImage :one
UPDATE images SET (
    url, 
    thumbnail, 
    category, 
    type, 
    width, 
    height
  ) = ($2, $3, $4, $5, $6, $7)
  WHERE id = $1
  RETURNING id, url, thumbnail, category, type, width, height
`

type UpdateImageParams struct {
	ID        int64          `db:"id" json:"id"`
	Url       string         `db:"url" json:"url"`
	Thumbnail sql.NullString `db:"thumbnail" json:"thumbnail"`
	Category  ImageCategory  `db:"category" json:"category"`
	Type      string         `db:"type" json:"type"`
	Width     sql.NullInt32  `db:"width" json:"width"`
	Height    sql.NullInt32  `db:"height" json:"height"`
}

func (q *Queries) UpdateImage(ctx context.Context, arg UpdateImageParams) (Image, error) {
	row := q.db.QueryRowContext(ctx, updateImage,
		arg.ID,
		arg.Url,
		arg.Thumbnail,
		arg.Category,
		arg.Type,
		arg.Width,
		arg.Height,
	)
	var i Image
	err := row.Scan(
		&i.ID,
		&i.Url,
		&i.Thumbnail,
		&i.Category,
		&i.Type,
		&i.Width,
		&i.Height,
	)
	return i, err
}
