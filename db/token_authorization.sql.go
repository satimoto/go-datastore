// Code generated by sqlc. DO NOT EDIT.
// source: token_authorization.sql

package db

import (
	"context"
)

const createTokenAuthorization = `-- name: CreateTokenAuthorization :one
INSERT INTO token_authorizations (
    token_id,
    authorization_id,
    location_id
  ) VALUES ($1, $2, $3)
  RETURNING id, token_id, authorization_id, location_id
`

type CreateTokenAuthorizationParams struct {
	TokenID         int64  `db:"token_id" json:"tokenID"`
	AuthorizationID string `db:"authorization_id" json:"authorizationID"`
	LocationID      string `db:"location_id" json:"locationID"`
}

func (q *Queries) CreateTokenAuthorization(ctx context.Context, arg CreateTokenAuthorizationParams) (TokenAuthorization, error) {
	row := q.db.QueryRowContext(ctx, createTokenAuthorization, arg.TokenID, arg.AuthorizationID, arg.LocationID)
	var i TokenAuthorization
	err := row.Scan(
		&i.ID,
		&i.TokenID,
		&i.AuthorizationID,
		&i.LocationID,
	)
	return i, err
}
